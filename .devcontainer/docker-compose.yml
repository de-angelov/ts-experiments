# Documentation of compose spec can be found at https://github.com/compose-spec/compose-spec
# [Manfred, 21apr2023]

version: '3.7'

# According to the compose spec we can specify the compose project name here. However, VS Code does
# not honor this as of 21 Apr 2023. Therefore there is a .env file at the root of this git repository
# in which the environment variable COMPOSE_PROJECT_NAME is defined as 'deangelov'. Once VS Code supports
# the top-level element 'name', the following can be used instead.
name: 'deangelov'
# [Manfred, 21apr2023]

services:
  # change the service name, the container name and the hostname for each dev container that connects
  # to the same virtual network.
  typescript-dev:
    image: typescript-dev:0.1
    build: .
    container_name: ts-dev
    hostname: typescript-dev.local
    working_dir: /work
    ports:
      # Change the port number in case you have more than one dev container based on this
      # template. For example, you could use something like:
      # - "3100:3000"
      - "3000:3000" # <<<<<< if preferred, explicit forward the port used by express
      # Using double quotes for port mapping to avoid YAML reading it as a number with a different base
      # e.g. "3333:22" would result in port numbers greater than 130000 which are clearly invalid.
      # Without double quotes YAML interprets it as a number based on 22. [Manfred, 24aug2022]
    volumes:
      - ..:/work
      # Allow AWS CLI and other tools to read an AWS profile. You can remove the following
      # If you are not using AWS.
      #  - ~/.aws:/home/node/.aws
    command: bash -c "/work/.devcontainer/init.sh && sleep infinity"
    networks:
      - deangelov
  db:
    image: postgres:14.1
    container_name: ts-dev-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tsenvdb
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - type: volume
        source: pgdata
        target: /var/lib/postgresql/data/pgdata
        read_only: false
    networks:
      - deangelov

volumes:
  pgdata:
    # If you list further services (ie containers) here, place them in the same virtual network if
    # you want them being visible to each other.

networks:
  deangelov:
